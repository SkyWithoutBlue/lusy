const { PrismaClient } = require("@prisma/client");

const prisma = new PrismaClient();

const ADMIN_EMAILS = [
    "nikitachebotov@gmail.com",
    "ludmilachipizubova@mail.ru",
];

async function setAdmins() {
    console.log("üîß –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...");
    console.log("");

    for (const email of ADMIN_EMAILS) {
        try {
            const user = await prisma.user.findUnique({
                where: { email },
            });

            if (!user) {
                console.log(
                    `‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${email} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ!`
                );
                continue;
            }

            if (user.role === "admin") {
                console.log(`‚úì ${email} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º`);
                continue;
            }

            await prisma.user.update({
                where: { email },
                data: { role: "admin" },
            });

            console.log(`‚úì ${email} –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º`);
        } catch (error) {
            console.error(`‚úó –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ${email}:`, error);
        }
    }

    console.log("");
    console.log("‚úÖ –ì–æ—Ç–æ–≤–æ!");
    await prisma.$disconnect();
}

setAdmins().catch((error) => {
    console.error("–û—à–∏–±–∫–∞:", error);
    process.exit(1);
});
