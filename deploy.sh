#!/bin/bash

# ==========================================
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
# –õ—é–¥–º–∏–ª–∞ –ß–∏–ø–∏–∑—É–±–æ–≤–∞ - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä
# ==========================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}‚úì${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}‚ö†${NC} $1"
}

log_error() {
    echo -e "${RED}‚úó${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Ubuntu/Debian
if [ -f /etc/os-release ]; then
    . /etc/os-release
    if [[ "$ID" != "ubuntu" && "$ID" != "debian" ]]; then
        log_warn "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è Ubuntu/Debian"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n) " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
fi

echo "üìã –®–∞–≥ 1/10: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
sudo apt update
log_info "–°–∏—Å—Ç–µ–º–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞"

echo ""
echo "üì¶ –®–∞–≥ 2/10: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 20..."
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    sudo apt install -y nodejs
    log_info "Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
else
    log_info "Node.js —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(node --version)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL
if ! command -v psql &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PostgreSQL..."
    sudo apt install -y postgresql postgresql-contrib
    sudo systemctl start postgresql
    sudo systemctl enable postgresql
    log_info "PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_info "PostgreSQL —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2
if ! command -v pm2 &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2..."
    sudo npm install -g pm2
    log_info "PM2 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_info "PM2 —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Nginx
if ! command -v nginx &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx..."
    sudo apt install -y nginx
    sudo systemctl start nginx
    sudo systemctl enable nginx
    log_info "Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    log_info "Nginx —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

echo ""
echo "üíæ –®–∞–≥ 3/10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ë–î
read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ë–î [lusy_user]: " DB_USER
DB_USER=${DB_USER:-lusy_user}

read -sp "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ë–î: " DB_PASSWORD
echo
if [ -z "$DB_PASSWORD" ]; then
    DB_PASSWORD=$(openssl rand -base64 16)
    log_warn "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π –ø–∞—Ä–æ–ª—å: $DB_PASSWORD"
fi

read -p "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö [lusy_db]: " DB_NAME
DB_NAME=${DB_NAME:-lusy_db}

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
sudo -u postgres psql <<EOF
-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_user WHERE usename = '$DB_USER') THEN
        CREATE USER $DB_USER WITH PASSWORD '$DB_PASSWORD';
    END IF;
END
\$\$;

-- –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
SELECT 'CREATE DATABASE $DB_NAME' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = '$DB_NAME')\gexec

-- –í—ã–¥–∞—á–∞ –ø—Ä–∞–≤
GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;

-- –î–ª—è PostgreSQL 15+
\c $DB_NAME
GRANT ALL ON SCHEMA public TO $DB_USER;
EOF

log_info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

echo ""
echo "üìÅ –®–∞–≥ 4/10: –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."

PROJECT_DIR="/var/www/lusy"
if [ ! -d "$PROJECT_DIR" ]; then
    sudo mkdir -p $PROJECT_DIR
    sudo chown -R $USER:$USER $PROJECT_DIR
    log_info "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞: $PROJECT_DIR"
else
    log_warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $PROJECT_DIR"
fi

echo ""
echo "üîë –®–∞–≥ 5/10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è NEXTAUTH_SECRET
NEXTAUTH_SECRET=$(openssl rand -base64 32)

# –ó–∞–ø—Ä–æ—Å –¥–æ–º–µ–Ω–∞
read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä: example.com) [localhost]: " DOMAIN
DOMAIN=${DOMAIN:-localhost}

if [ "$DOMAIN" = "localhost" ]; then
    NEXTAUTH_URL="http://localhost:3000"
else
    NEXTAUTH_URL="https://$DOMAIN"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ .env.local
cat > $PROJECT_DIR/.env.local <<EOF
# Database
DATABASE_URL="postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME?schema=public"

# NextAuth
NEXTAUTH_URL="$NEXTAUTH_URL"
NEXTAUTH_SECRET="$NEXTAUTH_SECRET"

# Analytics (–∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
NEXT_PUBLIC_GA_MEASUREMENT_ID=""
NEXT_PUBLIC_YANDEX_METRIKA_ID=""

# Environment
NODE_ENV="production"
EOF

log_info "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
log_warn "–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ:"
echo "  DATABASE_URL: postgresql://$DB_USER:$DB_PASSWORD@localhost:5432/$DB_NAME"
echo "  NEXTAUTH_SECRET: $NEXTAUTH_SECRET"
echo ""

echo "üì• –®–∞–≥ 6/10: –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."

cd $PROJECT_DIR

# –ï—Å–ª–∏ —ç—Ç–æ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ -d ".git" ]; then
    log_info "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ Git..."
    git pull
else
    log_warn "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ $PROJECT_DIR"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤..."
fi

echo ""
echo "üì¶ –®–∞–≥ 7/10: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –ø–∞–∫–µ—Ç–æ–≤..."
npm ci --production=false
log_info "–ü–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "üóÑÔ∏è –®–∞–≥ 8/10: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Prisma..."
npx prisma generate
npx prisma db push
log_info "Prisma –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞, —Å—Ö–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞ –∫ –ë–î"

echo ""
echo "üèóÔ∏è –®–∞–≥ 9/10: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."
npm run build
log_info "–ü—Ä–æ–µ–∫—Ç —Å–æ–±—Ä–∞–Ω"

echo ""
echo "üöÄ –®–∞–≥ 10/10: –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
pm2 delete lusy 2>/dev/null || true

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
pm2 start npm --name "lusy" -- start
pm2 save
pm2 startup | tail -n 1 | sudo bash

log_info "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —á–µ—Ä–µ–∑ PM2"

echo ""
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
sudo tee /etc/nginx/sites-available/lusy > /dev/null <<EOF
server {
    listen 80;
    server_name $DOMAIN;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
sudo ln -sf /etc/nginx/sites-available/lusy /etc/nginx/sites-enabled/
sudo rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
sudo nginx -t
sudo systemctl reload nginx

log_info "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

echo ""
echo "üîí –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."

if [ "$DOMAIN" != "localhost" ]; then
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å Let's Encrypt? (y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        sudo apt install -y certbot python3-certbot-nginx
        sudo certbot --nginx -d $DOMAIN --non-interactive --agree-tos --register-unsafely-without-email || \
        log_warn "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SSL –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo certbot --nginx -d $DOMAIN"
    fi
else
    log_warn "SSL –ø—Ä–æ–ø—É—â–µ–Ω (localhost)"
fi

echo ""
echo "‚úÖ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "=============================================="
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏:"
echo "=============================================="
echo "üåê URL: $NEXTAUTH_URL"
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PROJECT_DIR"
echo "üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $DB_NAME"
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: $DB_USER"
echo ""
echo "=============================================="
echo "üõ† –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "=============================================="
echo "pm2 status              # –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "pm2 logs lusy           # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "pm2 restart lusy        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo "pm2 stop lusy           # –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
echo "npm run db:studio       # –í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –ë–î"
echo "sudo nginx -t           # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
echo "sudo systemctl reload nginx  # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Nginx"
echo ""
echo "=============================================="
echo "üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "=============================================="
echo "1. –û—Ç–∫—Ä–æ–π—Ç–µ $NEXTAUTH_URL –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
echo "2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: $NEXTAUTH_URL/auth/signup"
echo "3. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É: $NEXTAUTH_URL/auth/signin"
echo "4. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: $NEXTAUTH_URL/admin"
echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –í–∞—à —Å–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"
